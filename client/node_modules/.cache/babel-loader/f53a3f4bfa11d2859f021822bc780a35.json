{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionMap => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionMap\n  };\n};\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\redux\\shop\\shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADnB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,IAAiB;AACpD,SAAM;AACFH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADpB;AAEFC,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AAChC,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AAEH,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAMH,GAXD;AAYH,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = () => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n    }\r\n}\r\n\r\nexport const fetchCollectionsSuccess = (collectionMap)=>{\r\n    return{\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionMap\r\n    }\r\n}\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then(snapshot =>{\r\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionMap));\r\n           \r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}