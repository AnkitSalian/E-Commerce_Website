{"ast":null,"code":"import _defineProperty from \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'; //Database\n\nimport 'firebase/auth'; //Authentication\n\nconst config = {\n  apiKey: \"AIzaSyD3yKbHPSdtSw5RRBJa4GG1p3Gt1iRXBLI\",\n  authDomain: \"crwn-db-e6847.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-e6847.firebaseio.com\",\n  projectId: \"crwn-db-e6847\",\n  storageBucket: \"\",\n  messagingSenderId: \"859188790327\",\n  appId: \"1:859188790327:web:96e2542041382495\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapshot = await userRef.get();\n  console.log(snapshot);\n\n  if (!snapshot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n      return userRef;\n    } catch (error) {\n      console.log('Error creating user===>', error);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","console","log","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP,C,CAA6B;;AAC7B,OAAO,eAAP,C,CAAwB;;AAExB,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAG,CAACA,QAAQ,CAACI,MAAb,EAAoB;AAAA,UACXC,WADW,GACWX,QADX,CACXW,WADW;AAAA,UACEC,KADF,GACWZ,QADX,CACEY,KADF;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAG;AACD,YAAMZ,OAAO,CAACa,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDZ,cAJC,EAAN;AAMA,aAAOC,OAAP;AACD,KARD,CAQC,OAAMc,KAAN,EAAY;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCO,KAAtC;AACD;AAEF;AAEF,CAxBM;AA0BP1B,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'; //Database\r\nimport 'firebase/auth'; //Authentication\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyD3yKbHPSdtSw5RRBJa4GG1p3Gt1iRXBLI\",\r\n  authDomain: \"crwn-db-e6847.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-e6847.firebaseio.com\",\r\n  projectId: \"crwn-db-e6847\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"859188790327\",\r\n  appId: \"1:859188790327:web:96e2542041382495\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapshot = await userRef.get();\r\n  console.log(snapshot);\r\n\r\n  if(!snapshot.exists){\r\n    const {displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n    try{\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n      return userRef;\r\n    }catch(error){\r\n      console.log('Error creating user===>',error);\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}