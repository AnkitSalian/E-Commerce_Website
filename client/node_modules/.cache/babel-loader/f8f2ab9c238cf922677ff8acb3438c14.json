{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPage from '../../pages/collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selector';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\pages\\shop\\shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","CollectionOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionLoaded","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AAEA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,SAAQC,wBAAR,QAAuC,gCAAvC;AAEA,MAAMC,yBAAyB,GAAGL,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAsC;AAE9BC,EAAAA,iBAAiB,GAAE;AAAA,UACRL,0BADQ,GACsB,KAAKM,KAD3B,CACRN,0BADQ;AAEfA,IAAAA,0BAA0B;AAC7B;;AACDO,EAAAA,MAAM,GAAE;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,mBADV,eACUA,mBADV;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEZ,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKU,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAEJ,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAd6B;;AAiBtC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,mBAAmB,EAAER;AADwB,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,0BAA0B,EAAE,MAAIa,QAAQ,CAACb,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\r\nimport CollectionPage from '../../pages/collection/collection.component';\r\n\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.action';\r\nimport {selectIsCollectionLoaded} from '../../redux/shop/shop.selector';\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n        componentDidMount(){\r\n            const {fetchCollectionsStartAsync} = this.props;\r\n            fetchCollectionsStartAsync();\r\n        }\r\n        render(){\r\n            const {match, isCollectionsLoaded} = this.props;\r\n            return(\r\n                <div className=\"shop-page\">\r\n                    <Route exact path={`${match.path}`} component={CollectionOverviewContainer}  />\r\n                    <Route path={`${match.path}/:collectionId`} render={props => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} /> } />\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectIsCollectionLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: ()=>dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}