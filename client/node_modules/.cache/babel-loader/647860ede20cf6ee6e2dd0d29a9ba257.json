{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\with-spinner\\\\Loader.jsx\";\nimport React from 'react';\nconst PropTypes = React.PropTypes;\nconst TIMER = 150; // Milliseconds between moving the next block\n\nconst TRANSITION = .5; // Seconds to actually move one block\n\nconst DEF_SIZE = 60; // Pixels height/width\n\nconst GUTTER = 5; // Spacing in percentage between tiles\n\nconst initialState = {\n  positions: {\n    1: 'alpha',\n    2: 'bravo',\n    3: 'charlie',\n    4: null,\n    5: 'delta',\n    6: 'echo',\n    7: 'foxtrot'\n  },\n  stateNumber: 0\n};\nimport './Loader.styles.scss';\n\nclass Loader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.setNextState = this.setNextState.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTimer(TIMER);\n  }\n\n  setTimer(time) {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n\n    this.timer = setInterval(this.setNextState, time);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clipPathForPosition(position) {\n    position = parseInt(position, 10);\n    const SIZE = (100 - 2 * GUTTER) / 3;\n    const VAR0 = '0% ';\n    const VAR1 = SIZE + GUTTER + '% ';\n    const VAR2 = 2 * SIZE + 2 * GUTTER + '% ';\n\n    switch (position) {\n      case 1:\n        return 'inset(' + VAR1 + VAR2 + VAR1 + VAR0 + ' round 5%)';\n\n      case 2:\n        return 'inset(' + VAR0 + VAR2 + VAR2 + VAR0 + ' round 5%)';\n\n      case 3:\n        return 'inset(' + VAR0 + VAR1 + VAR2 + VAR1 + ' round 5%)';\n\n      case 4:\n        return 'inset(' + VAR1 + VAR1 + VAR1 + VAR1 + ' round 5%)';\n\n      case 5:\n        return 'inset(' + VAR2 + VAR1 + VAR0 + VAR1 + ' round 5%)';\n\n      case 6:\n        return 'inset(' + VAR2 + VAR0 + VAR0 + VAR2 + ' round 5%)';\n\n      case 7:\n        return 'inset(' + VAR1 + VAR0 + VAR1 + VAR2 + ' round 5%)';\n    }\n  }\n\n  tileIndexToMove() {\n    switch (this.state.stateNumber) {\n      case 0:\n        return 7;\n\n      case 1:\n        return 6;\n\n      case 2:\n        return 5;\n\n      case 3:\n        return 4;\n\n      case 4:\n        return 3;\n\n      case 5:\n        return 2;\n\n      case 6:\n        return 1;\n\n      case 7:\n        return 4;\n    }\n  }\n\n  positionForTile(radioCommand) {\n    for (var position in this.state.positions) {\n      var tile = this.state.positions[position];\n\n      if (tile === radioCommand) {\n        return position;\n      }\n    }\n  }\n\n  setNextState() {\n    const currentPositions = this.state.positions;\n    const emptyIndex = this.positionForTile(null);\n    const indexToMove = this.tileIndexToMove();\n    const newPositions = Object.assign({}, currentPositions, {\n      [indexToMove]: null,\n      [emptyIndex]: currentPositions[indexToMove]\n    });\n    const currentState = this.state.stateNumber;\n    const nextState = currentState === 7 ? 0 : currentState + 1;\n    this.setState({\n      stateNumber: nextState,\n      positions: newPositions\n    });\n  }\n\n  renderTiles() {\n    return ['alpha', 'bravo', 'charlie', 'delta', 'echo', 'foxtrot'].map(radioCommand => {\n      const pos = this.positionForTile(radioCommand);\n      const styles = {\n        transition: TRANSITION + 's cubic-bezier(0.86, 0, 0.07, 1)',\n        WebkitClipPath: this.clipPathForPosition(pos)\n      };\n      return React.createElement(\"div\", {\n        key: \"rect-\" + radioCommand,\n        style: styles,\n        className: \"rect \" + radioCommand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          size = _this$props.size,\n          style = _this$props.style,\n          center = _this$props.center;\n    const styles = Object.assign({\n      width: DEF_SIZE + 'px',\n      height: DEF_SIZE + 'px'\n    }, style);\n\n    if (size) {\n      styles.width = size + 'px';\n      styles.height = size + 'px';\n    }\n\n    let className = \"sw-loader__wrapper\";\n\n    if (center) {\n      className += \" sw-loader__wrapper--center\";\n    }\n\n    return React.createElement(\"div\", {\n      style: styles,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sw-loader__holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderTiles()));\n  }\n\n}\n\nexport default Loader;","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\components\\with-spinner\\Loader.jsx"],"names":["React","PropTypes","TIMER","TRANSITION","DEF_SIZE","GUTTER","initialState","positions","stateNumber","Loader","Component","constructor","props","state","setNextState","bind","componentDidMount","setTimer","time","timer","clearInterval","setInterval","componentWillUnmount","clipPathForPosition","position","parseInt","SIZE","VAR0","VAR1","VAR2","tileIndexToMove","positionForTile","radioCommand","tile","currentPositions","emptyIndex","indexToMove","newPositions","Object","assign","currentState","nextState","setState","renderTiles","map","pos","styles","transition","WebkitClipPath","render","size","style","center","width","height","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;MACQC,S,GAAcD,K,CAAdC,S;AACR,MAAMC,KAAK,GAAG,GAAd,C,CAAmB;;AACnB,MAAMC,UAAU,GAAG,EAAnB,C,CAAsB;;AACtB,MAAMC,QAAQ,GAAG,EAAjB,C,CAAqB;;AACrB,MAAMC,MAAM,GAAG,CAAf,C,CAAkB;;AAClB,MAAMC,YAAY,GAAG;AAEnBC,EAAAA,SAAS,EAAE;AACT,OAAG,OADM;AAET,OAAG,OAFM;AAGT,OAAG,SAHM;AAIT,OAAG,IAJM;AAKT,OAAG,OALM;AAMT,OAAG,MANM;AAOT,OAAG;AAPM,GAFQ;AAWnBC,EAAAA,WAAW,EAAE;AAXM,CAArB;AAcA,OAAO,sBAAP;;AAEA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaP,YAAb;AACA,SAAKQ,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAcf,KAAd;AACD;;AACDe,EAAAA,QAAQ,CAACC,IAAD,EAAM;AACZ,QAAG,KAAKC,KAAR,EAAc;AACZC,MAAAA,aAAa,CAAC,KAAKD,KAAN,CAAb;AACD;;AACD,SAAKA,KAAL,GAAaE,WAAW,CAAC,KAAKP,YAAN,EAAoBI,IAApB,CAAxB;AACD;;AACDI,EAAAA,oBAAoB,GAAE;AACpBF,IAAAA,aAAa,CAAC,KAAKD,KAAN,CAAb;AACD;;AACDI,EAAAA,mBAAmB,CAACC,QAAD,EAAU;AAC3BA,IAAAA,QAAQ,GAAGC,QAAQ,CAACD,QAAD,EAAW,EAAX,CAAnB;AACA,UAAME,IAAI,GAAG,CAAC,MAAI,IAAErB,MAAP,IAAe,CAA5B;AACA,UAAMsB,IAAI,GAAG,KAAb;AACA,UAAMC,IAAI,GAAIF,IAAI,GAACrB,MAAN,GAAgB,IAA7B;AACA,UAAMwB,IAAI,GAAI,IAAEH,IAAF,GAAO,IAAErB,MAAV,GAAoB,IAAjC;;AACA,YAAOmB,QAAP;AACE,WAAK,CAAL;AAAQ,eAAO,WAAWI,IAAX,GAAkBC,IAAlB,GAAyBD,IAAzB,GAAgCD,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWA,IAAX,GAAkBE,IAAlB,GAAyBA,IAAzB,GAAgCF,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWA,IAAX,GAAkBC,IAAlB,GAAyBC,IAAzB,GAAgCD,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWA,IAAX,GAAkBA,IAAlB,GAAyBA,IAAzB,GAAgCA,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWC,IAAX,GAAkBD,IAAlB,GAAyBD,IAAzB,GAAgCC,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWC,IAAX,GAAkBF,IAAlB,GAAyBA,IAAzB,GAAgCE,IAAhC,GAAuC,YAA9C;;AACR,WAAK,CAAL;AAAQ,eAAO,WAAWD,IAAX,GAAkBD,IAAlB,GAAyBC,IAAzB,GAAgCC,IAAhC,GAAuC,YAA9C;AAPV;AASD;;AACDC,EAAAA,eAAe,GAAE;AACf,YAAO,KAAKjB,KAAL,CAAWL,WAAlB;AACE,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;;AACR,WAAK,CAAL;AAAQ,eAAO,CAAP;AARV;AAUD;;AACDuB,EAAAA,eAAe,CAACC,YAAD,EAAc;AAC3B,SAAI,IAAIR,QAAR,IAAoB,KAAKX,KAAL,CAAWN,SAA/B,EAAyC;AACvC,UAAI0B,IAAI,GAAG,KAAKpB,KAAL,CAAWN,SAAX,CAAqBiB,QAArB,CAAX;;AACA,UAAGS,IAAI,KAAKD,YAAZ,EAAyB;AACvB,eAAOR,QAAP;AACD;AACF;AACF;;AACDV,EAAAA,YAAY,GAAE;AACZ,UAAMoB,gBAAgB,GAAG,KAAKrB,KAAL,CAAWN,SAApC;AACA,UAAM4B,UAAU,GAAG,KAAKJ,eAAL,CAAqB,IAArB,CAAnB;AACA,UAAMK,WAAW,GAAG,KAAKN,eAAL,EAApB;AACA,UAAMO,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,gBAAlB,EAAoC;AACvD,OAACE,WAAD,GAAe,IADwC;AAEvD,OAACD,UAAD,GAAcD,gBAAgB,CAACE,WAAD;AAFyB,KAApC,CAArB;AAKA,UAAMI,YAAY,GAAG,KAAK3B,KAAL,CAAWL,WAAhC;AACA,UAAMiC,SAAS,GAAID,YAAY,KAAK,CAAlB,GAAuB,CAAvB,GAA2BA,YAAY,GAAG,CAA5D;AAGA,SAAKE,QAAL,CAAc;AAAClC,MAAAA,WAAW,EAAEiC,SAAd;AAAyBlC,MAAAA,SAAS,EAAE8B;AAApC,KAAd;AACD;;AACDM,EAAAA,WAAW,GAAE;AACX,WAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,OAA9B,EAAuC,MAAvC,EAA+C,SAA/C,EAA0DC,GAA1D,CAA+DZ,YAAD,IAAkB;AACrF,YAAMa,GAAG,GAAG,KAAKd,eAAL,CAAqBC,YAArB,CAAZ;AACA,YAAMc,MAAM,GAAG;AACbC,QAAAA,UAAU,EAAG5C,UAAD,GAAe,kCADd;AAEb6C,QAAAA,cAAc,EAAE,KAAKzB,mBAAL,CAAyBsB,GAAzB;AAFH,OAAf;AAIA,aAAO;AAAK,QAAA,GAAG,EAAE,UAAUb,YAApB;AAAkC,QAAA,KAAK,EAAEc,MAAzC;AAAiD,QAAA,SAAS,EAAE,UAAUd,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAPM,CAAP;AAQD;;AACDiB,EAAAA,MAAM,GAAG;AAAA,wBAEyB,KAAKrC,KAF9B;AAAA,UAECsC,IAFD,eAECA,IAFD;AAAA,UAEOC,KAFP,eAEOA,KAFP;AAAA,UAEcC,MAFd,eAEcA,MAFd;AAGP,UAAMN,MAAM,GAAGR,MAAM,CAACC,MAAP,CAAc;AAC3Bc,MAAAA,KAAK,EAAEjD,QAAQ,GAAG,IADS;AAE3BkD,MAAAA,MAAM,EAAElD,QAAQ,GAAG;AAFQ,KAAd,EAGZ+C,KAHY,CAAf;;AAKA,QAAKD,IAAL,EAAY;AACVJ,MAAAA,MAAM,CAACO,KAAP,GAAeH,IAAI,GAAG,IAAtB;AACAJ,MAAAA,MAAM,CAACQ,MAAP,GAAgBJ,IAAI,GAAG,IAAvB;AACD;;AAED,QAAIK,SAAS,GAAG,oBAAhB;;AACA,QAAGH,MAAH,EAAU;AACRG,MAAAA,SAAS,IAAI,6BAAb;AACD;;AAED,WACE;AAAK,MAAA,KAAK,EAAET,MAAZ;AAAoB,MAAA,SAAS,EAAES,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,WAAL,EADH,CADF,CADF;AAOD;;AAxGkC;;AA2GrC,eAAelC,MAAf","sourcesContent":["import React from 'react';\r\nconst { PropTypes } = React;\r\nconst TIMER = 150; // Milliseconds between moving the next block\r\nconst TRANSITION = .5 // Seconds to actually move one block\r\nconst DEF_SIZE = 60; // Pixels height/width\r\nconst GUTTER = 5; // Spacing in percentage between tiles\r\nconst initialState = {\r\n\r\n  positions: {\r\n    1: 'alpha',\r\n    2: 'bravo',\r\n    3: 'charlie',\r\n    4: null,\r\n    5: 'delta',\r\n    6: 'echo',\r\n    7: 'foxtrot'\r\n  },\r\n  stateNumber: 0\r\n}\r\n\r\nimport './Loader.styles.scss';\r\n\r\nclass Loader extends React.Component {\r\n    constructor(props) {\r\n    super(props)\r\n    this.state = initialState;\r\n    this.setNextState = this.setNextState.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setTimer(TIMER);\r\n  }\r\n  setTimer(time){\r\n    if(this.timer){\r\n      clearInterval(this.timer);\r\n    }\r\n    this.timer = setInterval(this.setNextState, time);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer);\r\n  }\r\n  clipPathForPosition(position){\r\n    position = parseInt(position, 10);\r\n    const SIZE = (100-2*GUTTER)/3;\r\n    const VAR0 = '0% ';\r\n    const VAR1 = (SIZE+GUTTER) + '% ';\r\n    const VAR2 = (2*SIZE+2*GUTTER) + '% ';\r\n    switch(position){\r\n      case 1: return 'inset(' + VAR1 + VAR2 + VAR1 + VAR0 + ' round 5%)';\r\n      case 2: return 'inset(' + VAR0 + VAR2 + VAR2 + VAR0 + ' round 5%)';\r\n      case 3: return 'inset(' + VAR0 + VAR1 + VAR2 + VAR1 + ' round 5%)';\r\n      case 4: return 'inset(' + VAR1 + VAR1 + VAR1 + VAR1 + ' round 5%)';\r\n      case 5: return 'inset(' + VAR2 + VAR1 + VAR0 + VAR1 + ' round 5%)';\r\n      case 6: return 'inset(' + VAR2 + VAR0 + VAR0 + VAR2 + ' round 5%)';\r\n      case 7: return 'inset(' + VAR1 + VAR0 + VAR1 + VAR2 + ' round 5%)';\r\n    }\r\n  }\r\n  tileIndexToMove(){\r\n    switch(this.state.stateNumber){\r\n      case 0: return 7;\r\n      case 1: return 6;\r\n      case 2: return 5;\r\n      case 3: return 4;\r\n      case 4: return 3;\r\n      case 5: return 2;\r\n      case 6: return 1;\r\n      case 7: return 4;\r\n    }\r\n  }\r\n  positionForTile(radioCommand){\r\n    for(var position in this.state.positions){\r\n      var tile = this.state.positions[position];\r\n      if(tile === radioCommand){\r\n        return position;\r\n      }\r\n    }\r\n  }\r\n  setNextState(){\r\n    const currentPositions = this.state.positions;\r\n    const emptyIndex = this.positionForTile(null);\r\n    const indexToMove = this.tileIndexToMove();\r\n    const newPositions = Object.assign({}, currentPositions, {\r\n      [indexToMove]: null,\r\n      [emptyIndex]: currentPositions[indexToMove]\r\n    });\r\n\r\n    const currentState = this.state.stateNumber;\r\n    const nextState = (currentState === 7) ? 0 : currentState + 1;\r\n\r\n\r\n    this.setState({stateNumber: nextState, positions: newPositions});\r\n  }\r\n  renderTiles(){\r\n    return ['alpha', 'bravo', 'charlie', 'delta', 'echo', 'foxtrot'].map((radioCommand) => {\r\n      const pos = this.positionForTile(radioCommand);\r\n      const styles = {\r\n        transition: (TRANSITION) + 's cubic-bezier(0.86, 0, 0.07, 1)',\r\n        WebkitClipPath: this.clipPathForPosition(pos)\r\n      }\r\n      return <div key={\"rect-\" + radioCommand} style={styles} className={\"rect \" + radioCommand} />\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const { size, style, center } = this.props;\r\n    const styles = Object.assign({\r\n      width: DEF_SIZE + 'px',\r\n      height: DEF_SIZE + 'px'\r\n    }, style);\r\n\r\n    if ( size ) {\r\n      styles.width = size + 'px';\r\n      styles.height = size + 'px';\r\n    }\r\n\r\n    let className = \"sw-loader__wrapper\"\r\n    if(center){\r\n      className += \" sw-loader__wrapper--center\";\r\n    }\r\n\r\n    return (\r\n      <div style={styles} className={className}>\r\n        <div className=\"sw-loader__holder\">\r\n          {this.renderTiles()} \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loader;"]},"metadata":{},"sourceType":"module"}