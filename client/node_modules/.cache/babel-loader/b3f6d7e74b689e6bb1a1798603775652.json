{"ast":null,"code":"import _defineProperty from \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Ankit\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.action';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\components\\sign-up\\sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {signUpStart} from '../../redux/user/user.action';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n            displayName:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:''\r\n    });\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n    const handleSubmit= async event=>{\r\n        event.preventDefault();\r\n\r\n        if(password!==confirmPassword){\r\n            alert(\"Password don't match\");\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password})\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n        setUserCredentials({...userCredentials, [name]:value});\r\n    }\r\n\r\n        return(\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\">I do not have a account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                    <FormInput type=\"text\"\r\n                    name=\"displayName\" \r\n                    value={displayName} \r\n                    onChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                    />\r\n                    <FormInput type=\"email\"\r\n                    name=\"email\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                    label=\"Email\"\r\n                    required\r\n                    />\r\n                    <FormInput type=\"password\"\r\n                    name=\"password\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                    label=\"Password\"\r\n                    required\r\n                    />\r\n                    <FormInput type=\"password\"\r\n                    name=\"confirmPassword\" \r\n                    value={confirmPassword} \r\n                    onChange={handleChange}\r\n                    label=\"Confirm Password\"\r\n                    required\r\n                    />\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}