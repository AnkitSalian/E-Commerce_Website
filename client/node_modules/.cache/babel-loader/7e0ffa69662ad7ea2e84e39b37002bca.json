{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef.get().then(snapshot =>{\n  //     const collectionMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:\\Ankit\\React\\crwn-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AAEA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,eAA/D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,8BAAD,EAAiCS,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GATkC,CAYnC;AACA;AACA;AAEA;;AAEH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMlB,SAAS,CACXO,eAAe,CAACY,uBADL,EAEXX,oBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\r\n\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.action';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAsync(){\r\n    yield console.log('I am fired');\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    }catch(error){\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    }\r\n    \r\n\r\n    // collectionRef.get().then(snapshot =>{\r\n    //     const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n    //     dispatch(fetchCollectionsSuccess(collectionMap));\r\n           \r\n    // }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n        \r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}